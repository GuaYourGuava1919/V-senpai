[
  {
    "chunk_id": "0f891330-edfd-44e5-99aa-0fd9855096c1",
    "interviewee": "董書妤、周佳欣",
    "question": "2. 從系統分析與設計課程中遇到甚麼問題?",
    "answer": "因組內許多成員都有拖延的習慣，導致整合時間相當匆忙，debug 時間不足，常常\n都是期限快到的時候才完成。學姐們也有提到，濟聰老師有建議同學們在系統發表\n前不應再增加新功能，但因為學長姐整合及除錯時間常不足，所以常常都在快要發\n表時還在新增功能。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 123
  },
  {
    "chunk_id": "8c062a17-b1fb-4676-a86a-e781b37df385",
    "interviewee": "董書妤、周佳欣",
    "question": "3. 從系統開發中遇到甚麼問題? 如何解決? - 子題 1",
    "answer": "）使用git 嗎? 遇到甚麼問題?  \n有使用，但因擔心負擔過重而未建立分支，導致組員間在使用時出現程式碼\n上的衝突，例如其中一位組員直接上傳本地端資料而沒有更新雲端的資料，\n導致主要幹道上原先撰寫好的功能被覆蓋掉，得額外花時間進行處理。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 119
  },
  {
    "chunk_id": "6c4db6ea-e36e-404f-818a-f0ee0329c6fd",
    "interviewee": "董書妤、周佳欣",
    "question": "3. 從系統開發中遇到甚麼問題? 如何解決? - 子題 2",
    "answer": "）使用哪個語言、資料庫開發? 為何? 優缺點是? \n只有使用到Firebase 和React，且沒有再加其他的框架。使用的語言不管前\n後端都是以前沒有接觸過的。 \n \nReact \nFirebase \n優點 \n與JS 和HTML 相比，React 更\n簡單且模組化，能夠一次性在\n原始頁面進行重複元素的修\n改，維護相當方便。目前在業\n界也被廣泛應用。 \n屬於Nosql，且CRUD 等等大\n功能都已經存在，功能相當\n齊全，使用者可直接進行使\n用。 \n缺點 \n在未曾接觸過的情況下，需要\n花時間自行摸索和熟悉，並且\nFirebase 使用上很便利，但\n有成本、限制和依賴問題。\n得完整了解架構，以減少出錯\n機會。(邊做邊學) \n對大型應用的擴展性有挑\n戰。 \n建議 \n要了解一個新的語言前可以先了解它是如何運作的，了解一些\n概念後參考他人的文件並進行實作。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 377
  },
  {
    "chunk_id": "db856be1-f5f0-476b-b110-cfeb73ae8e0d",
    "interviewee": "董書妤、周佳欣",
    "question": "3. 從系統開發中遇到甚麼問題? 如何解決? - 子題 3",
    "answer": "）如何定期追蹤組員進度? 遇到甚麼問題? \n整體運作屬於扁平化組織，組員遇到任何問題都會馬上提出並討論，各自會\n處理好自己的部分，且有餘力會互相幫助。但因為時常拖到期限前才完成，\n彼此間無法完整的進行進度追蹤，且在git 上未建立分支，因此整合會花上\n很多時間。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 131
  },
  {
    "chunk_id": "8c7aeb5d-bf89-4ed6-9af8-75f14f210a4d",
    "interviewee": "董書妤、周佳欣",
    "question": "4. (到目前為止，)專題遇到的最大問題是甚麼? 如何解決?",
    "answer": "學長姐正式在製作專題時，前端和後端都換成了新的語言，因此前期花費了些許時\n間熟悉新語言。然而，整個製作過程遇到最大的問題是：為了實現專題預期的效\n果，學長姐決定加入時下新穎的AI 工具Microsoft azure 做使用。因為採用的是\n最新的架構，很難上網找到更好的參考對象以及資源來更好的運用這些服務。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 153
  },
  {
    "chunk_id": "5e47d28e-794d-4869-a777-dac44938a0be",
    "interviewee": "董書妤、周佳欣",
    "question": "5. (到目前為止，)系統開發中遇到甚麼問題? 如何解決? - 子題 1",
    "answer": "）使用git 嗎? 遇到甚麼問題? \n有，且同時使用Devops 來記錄以及分配代辦事項給其他組員，並以其為命名\n依據。此舉改善了沒有建立分支的問題。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 75
  },
  {
    "chunk_id": "eaffce24-13df-4ada-84ab-e0ec05ed3668",
    "interviewee": "董書妤、周佳欣",
    "question": "5. (到目前為止，)系統開發中遇到甚麼問題? 如何解決? - 子題 2",
    "answer": "）使用哪個語言、資料庫開發?跟SA 使用的一樣嗎?為何?  \n因為專題製作上有產學合作，需要配合對方使用一樣的語言，因此前端、後\n端以及資料庫都是使用和先前不同的語言，前端使用的是Vue、後端使\n用.net、資料庫則是使用sqlserver。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 121
  },
  {
    "chunk_id": "63043ab4-016b-4589-be17-ddd1d33ba24f",
    "interviewee": "董書妤、周佳欣",
    "question": "5. (到目前為止，)系統開發中遇到甚麼問題? 如何解決? - 子題 3",
    "answer": "）如何定期追蹤組員進度? 跟SA 一樣嗎? 遇到甚麼問題? \n和SA 一樣，學長姐們沒有定期進行進度追蹤，直到開會時才能了解所有人的\n進展。然而，這樣的做法會增加不確定性，並導致遇到的問題被延遲解決。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 100
  },
  {
    "chunk_id": "feecc889-32f3-4c63-9a17-56fa45b64dad",
    "interviewee": "董書妤、周佳欣",
    "question": "6. 對各位的建議是?",
    "answer": "-要在Git 上建立分支，以便於後續合併。此外，分工應根據自己的系統來劃分，並\n且分工必須明確且公平。 \n-應確保每個人都清楚自己的任務，而不是假設大家的認知都是一致的。學姐們建議\n選出一位組長，以確保每個人知曉當前應該執行的任務。 \n-老師注重功能的合理性以及使用者體驗，並且很在意同學們對該作業的態度。 \n  \nDeeplink 心得 \n \n深度學習-居家智慧照顧系統 心得 \n這場深度學習專題分享會分成三個部分，分別為簡介及技術分享、在過程中遇\n到的問題以及如何解決、如何將所學知識用在專題上。 \n \n \n目前深度學習在機器領域上是相當熱門的產業之一，但可惜的是，現今深度學\n習多被使用於人臉辨識，而高齡化的社會下，深度學習未被廣泛用於居家照顧上，所\n以學長想往未發展成熟的居家智能領域發展，並以此為專題研究，以建立居家照顧系\n統，來增加社會福祉。 \n \n \n在分享會中，學長提到機器學習與深度學習最大的不同之處是，機器學習是人\n們給照片和特徵讓機器去學習，而深度學習則是，除了人們給的特徵外，它還會自己\n去找人類沒發現的特徵。深度學習仰賴背後的資料集，只要資料集的數量越多，那深\n度學習能判斷出的東西也越準確。此次專題運用了三個技術，包含LebelImg、\nPython、Line notify，其中Line notify 是我們最有興趣的部份，它是一個免費且普\n及的軟體，在說明會中，學長利用Line notiify 結合人臉辨識，使得當偵測到人臉關\n節點時，Line notify 會跳出偵測訊息，對普遍有Line 的台灣人來說相當方便。 \n \n \n在遇到的問題上，學長覺得專題有三個點是最重要的，第一，主題必須是自己\n有興趣的領域，而不是隨便教授丟給你一個主題就做。第二，分配工作上不該分太明\n確，這樣大家都只做完自己的工作，卻不知道對方的工作而導致成品無法組合起來。\n第三，在遇到問題時，我們必須自己學會在網路上查找解決方法，自己解決問題，而\n不是等待其他人給你解答，只有不斷的自我學習，從實作中練習，才能做出一個好的\n專題。 \n \n \n訪談結果和deeplink 分享比較後，我們可能遇到的問題&預防方法 \n在學長姐訪談和deeplink 中我們得知，組員定期進度追蹤以及分配工作是最為\n重要的，不管是在影片亦或是現場訪問學姊，這兩件都是組中基本會的問題。 \n \n我們認為拖延的部分在我們組內不會發生，因為在之前的課上合作時，組員們\n都是盡快完成作業交給下一位組員去進行，甚至提早完成或當天分配完工作當天就完\n成，我們都很信任組員，此外我們若有時程上的問題都會第一時間提出，並由其他組\n員從旁協助。第二，在分配工作的問題上，我們認為在開始分配工作前，大家都必須\n去熟悉所有東西後，再進行分配的工作，這樣可以避免互相都不熟悉彼此的業務，此\n外，我們中午吃飯時也會一起吃飯並確認對方進度，以及有無可以改善的地方。 \n \n—-------------------------------------------------------------------------------- \n \n第28 屆資服競賽得獎經驗分享-捐捐不息 心得 \n透過這次的分享讓我受益最多的部分是上台發表自己的作品和面對評審們的提問該如\n何準備和面對；首先讓我印象最深的一點是柏儒學長說選擇上台報告的人不是用抽籤\n和爬梯，而是要有禮貌、能言善道且要強大的舞台魅力，但一直以來誰上台報告的問\n題，我們通常是用爬梯子來選擇的，只能說學長真的是一針見血直接戳到我們的痛處\n了；要有一場精彩的報告除了報告者要有上述三點特質，學長還提到了很多我之前都\n沒想到的小撇步，像是模擬情境不斷演練，之前我在練習報告時都是自己一個人面對\n著ppt 練習，但是就像學長說的，面對著組員報告會更貼合真正報告時的情境和情\n緒，讓自己更習慣真正上場報告的感受；第二個讓我印象深刻的是學姐們分享面對評\n審QA 的問題，這也是我報告中最怕但也最需要克服的環節，我害怕如果評審問出了一\n個我不知道該如何回答的問題時要怎麼辦，但透過這次學姊的分享給了我一個典範，\n讓我可以更好的去解決這個問題；那學姊主要分享了三個QA 小撇步，首先就是把QA\n問題分類，讓多個人分擔，這樣可以讓彼此各自更專注在一大類的問題也可以分散壓\n力；第二個是自己組在討論或是老師、朋友等對專題提出疑問時，就把問題記下來並\n加上小組討論出的解決方案，但如果真的遇到無法回答的問題，就要展現自己積極的\n態度像是回答：「謝謝評審的建議，為了我們系統的長期發展，我們會回去討論並解\n決這個問題。」而不是：「沒有討論到這個問題」，同個意思給評審的感受卻是天差\n地遠，所以好的表達是很重要的；最後是與其他組交流，感覺有些部分可能是我們太\n順著自己的邏輯走而疏忽掉一些細節，所以跟其他組互相分享並聽取他們的問題和建\n議，可以減少燈下黑的情況發生。透過上述的經驗分享，讓我們未來可以為上台報告\n有更出色的表現和準備的方向。 \n \n \n \n訪談結果和deeplink 分享比較後，我們可能遇到的問題&預防方法： \n從訪談結果中，我覺得我們最有可能跟學姐一樣面臨到資料覆蓋的問題，之前都有跟\n現在的組員彼此合作過很多次，我們大多都是分配好工作後就個自把自己部分完成，\n然後最後在整合上傳，但在整合的過程中就可能遇到彼此的資料庫的資料不同，命名\n不同等一些細節上的問題，但就是因為這些小細節可能造成系統出錯、畫面跑不出來\n等令人頭痛的問題，所以之後我們會吸取學姊給我們的建議就是開分枝，先各自做好\n且確認都沒問題後才可以整合進主幹道，確保主幹道的功能都是可以正常運作沒有問\n題的；那透過deeplink 我覺得我們最有可能面臨的問題就是誰報告的問題，因為我們\n通常不會主動去負責報告，所以都用被動也就是抽籤的方式決定，但這樣就可能會錯\n過最合適的人選，所以接下來可以讓大家試著去報告，為將來報告的人選做準備。 \n \n—-------------------------------------------------------------------------------- \n \n訪談結果和deeplink 分享比較後，我們可能遇到的問題&預防方法： \n工作分配前 \n \n問題： \n工作分配的目標不明確 \n預防方法： \n組員都必須清楚了解所有工作內容後再進行工作分配，建議可以使用DevOps 分配各個\n代辦事項，可以更好的了解系統目前的進度，除了可以避免組員不熟悉彼此的業務，\n還可以避免每個人做出來的產出和預想的架構有落差，還需另外花時間修改的狀況。 \n \n問題： \n資料覆蓋、無法相容 \n預防方法： \n工作分配可以使用Git 進行內容的分支，除了清楚的討論，每個人的程式要經確認後\n再上傳至主幹道，以確保主幹道的內容可以完整呈現，減少程式整合時產生的非預期\n問題。 \n \n成果發表 \n \n問題： \n大家都不願意接受口頭報告的工作 \n預防方法： \n每位組員需要嘗試口頭報告的經驗，在未來正式專題發表時，應該由最適合、最能夠\n掌握舞台的人進行報告，讓我們的成果能夠完整的呈現給評審。",
    "source_file": "doc1.pdf",
    "page_number": -1,
    "answer_length": 2949
  },
  {
    "chunk_id": "12f29e13-c2cc-4a30-bf3e-80a6b1d078ac",
    "interviewee": "蔡易辰",
    "question": "10. 使用哪個語言、資料庫開發？跟SA 所使用的㇐樣嗎？為何？優缺點是？",
    "answer": "資料庫㇐樣是用MySQL，我們是跟學校租虛擬機，把資料庫架在那裡。語\n言的部分改用Unity，Unity 好的地方是它有自己的圖形化介面；遊戲邏輯是\n用C#；跟資料庫互動的㇐樣是PHP。優缺點的部分我覺得都還好、語言都\n⾧㇐樣。",
    "source_file": "doc2.pdf",
    "page_number": -1,
    "answer_length": 114
  },
  {
    "chunk_id": "5166e909-f04e-4b82-afd0-2c5590dd88fe",
    "interviewee": "蔡易辰",
    "question": "11. 如何定期追蹤組員進度？跟SA ㇐樣嗎？遇到甚麼問題？",
    "answer": "定期追蹤的部分跟SA ㇐樣。主要還是我在定時程，因為他們有時候不太知\n道自己在幹嘛。",
    "source_file": "doc2.pdf",
    "page_number": -1,
    "answer_length": 42
  },
  {
    "chunk_id": "7b2b4b53-aa7e-4a15-ae99-7b2441a3c0a4",
    "interviewee": "蔡易辰",
    "question": "12. 對各位的建議是？",
    "answer": " \n㇐定要會用git，因為我們是多人小組作業 \n \n可以趁現在多學其他框架或程式語言，例如react、vue.js… \n \n組內定完成的期限要提前㇐點，才不會最後在裝前後端的時候，突然出\n現㇐堆bug，來不及解決 \n \n專題要早點想完題目早點開始做 \n \n二、 \nDeeplink 分享的整理及心得 \n（㇐）小專題那些事 \n \n重點整理：",
    "source_file": "doc2.pdf",
    "page_number": -1,
    "answer_length": 174
  }
]